--- spal60sr\src\TSSGCtrl\SSCopy.original.cpp	Mon Jan 13 00:40:34 2003
+++ spal60sr\src\TSSGCtrl\SSCopy.cpp	Mon Jan 13 00:40:34 2003
@@ -1,5 +1,13 @@
 #include "SSCopy.h"
 
+#define LOCAL_MEMORY_SUPPORT 1
+#define FIX_SSCOPY           1
+
+#if LOCAL_MEMORY_SUPPORT
+BOOLEAN __stdcall TSSGCtrl_OneRead_with_CheckLocalMemory(TSSGCtrl *_this, TSSGSubject *SSGS, HANDLE ProcessHandle, DWORD Address, LPVOID Data, DWORD Size, const string &AddressStr);
+BOOLEAN __stdcall TSSGCtrl_OneWrite_with_CheckLocalMemory(TSSGCtrl *_this, TSSGSubject *SSGS, HANDLE ProcessHandle, DWORD Address, LPVOID Data, DWORD Size, const string &AddressStr);
+#endif
+
 //---------------------------------------------------------------------
 //「初期設定関数」
 //
@@ -32,6 +40,9 @@
  lockStr		= tmpV[1];
 
  isSeted = true;
+#if FIX_SSCOPY
+ SSGC.SetLock(true, this, new TSSArgBool(true));
+#endif
 }
 //---------------------------------------------------------------------
 //「データ書き込み関数」
@@ -40,22 +51,34 @@
 //---------------------------------------------------------------------
 unsigned long TSSCopy::Write(TSSGCtrl &SSGC, TSSArg *Arg)
 {
-
+#if !FIX_SSCOPY
  Setting(SSGC);
+#endif
 
  TSmartHandle SHandle;
+#if !LOCAL_MEMORY_SUPPORT
  if(( SHandle=SSGC.Open(this, PROCESS_VM_READ|PROCESS_VM_WRITE|PROCESS_VM_OPERATION) )==NULL)
 	return ssgCtrl::reOPEN_ERROR;	//プロセスのオープンエラー
+#else
+ SHandle = SSGC.Open(this, PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_VM_OPERATION);
+#endif
 
  if(!SSGC.IsEnabled(this)) return ssgCtrl::reNOT_ENABLED;	//有効条件が偽
 
 
  //属性を適用
  unsigned long Address = SSGC.GetAddress(this, addressStr);
+#if SUBJECT_STATUS
+ address = (const BYTE *)Address;
+#endif
  unsigned long SrcAddress = SSGC.GetAddress(this, srcAddressStr);
  
  byte *Data = new byte(size+1);
+#if !LOCAL_MEMORY_SUPPORT
  if(!SSGC.OneRead(this, SHandle, SrcAddress, Data, size)){
+#else
+ if (!TSSGCtrl_OneRead_with_CheckLocalMemory(&SSGC, this, SHandle, SrcAddress, Data, size, srcAddressStr)) {
+#endif
 	//失敗
 	delete Data;
 	return ssgCtrl::reACCESS_ERROR;	//エラーなら1を返す
@@ -67,13 +90,21 @@
 	delete Data;
 
 	Num = SSGC.CheckIO_FEP(this, Num, true);
+#if !LOCAL_MEMORY_SUPPORT
 	if(!SSGC.OneWrite(this, SHandle, Address, &Num, size)){
+#else
+	if (!TSSGCtrl_OneWrite_with_CheckLocalMemory(&SSGC, this, SHandle, Address, &Num, size, addressStr)) {
+#endif
 		//失敗
 		return ssgCtrl::reACCESS_ERROR;	//エラーなら1を返す
 	}
 	SSGC.CheckFunnel(this, Num);
  }else{
+#if !LOCAL_MEMORY_SUPPORT
 	if(!SSGC.OneWrite(this, SHandle, Address, Data, size)){
+#else
+	if (!TSSGCtrl_OneWrite_with_CheckLocalMemory(&SSGC, this, SHandle, Address, Data, size, addressStr)) {
+#endif
 		//失敗
 		delete Data;
 		return ssgCtrl::reACCESS_ERROR;	//エラーなら1を返す
