--- spal60sr\src\TSSGCtrl\SSFloatCalc.original.cpp	Sun Apr  6 21:44:14 2003
+++ spal60sr\src\TSSGCtrl\SSFloatCalc.cpp	Sun Apr  6 21:44:14 2003
@@ -1,6 +1,15 @@
 #include "SSFloatCalc.h"
 #include "BitOperation.h"
 
+#define LOCAL_MEMORY_SUPPORT 1
+#define FORCE_FUNNEL         1
+#define MIN_MAX_SUPPORT      1
+
+#if MIN_MAX_SUPPORT
+#include <float.h>
+#include "intrinsic.h"
+#endif
+
 //---------------------------------------------------------------------
 //「初期設定関数」
 //
@@ -12,7 +21,11 @@
  if(isSeted) return;
  
  vector<string> tmpV;
+#if !SUBJECT_STRING_TABLE
  SSGC.strD.List(code+SSGC.GetEndWith(this), ",", &tmpV, strD::etTRIM);
+#else
+ SSGC.strD.List((string&)code + SSGC.GetEndWith(this), ",", &tmpV, strD::etTRIM);
+#endif
  tmpV.resize(5);	//規定数に
 
  //属性を適用
@@ -29,6 +42,19 @@
 	else			size=8;
  }
 
+#if MIN_MAX_SUPPORT
+ if (tmpV[1].length() == 3)
+	if (*(LPDWORD)tmpV[1].begin() == BSWAP32('min\0'))
+		min = size == 8 ? DBL_MIN : FLT_MIN;
+	else if (*(LPDWORD)tmpV[1].begin() == BSWAP32('max\0'))
+		min = size == 8 ? DBL_MAX : FLT_MAX;
+ if (tmpV[2].length() == 3)
+	if (*(LPDWORD)tmpV[2].begin() == BSWAP32('min\0'))
+		max = size == 8 ? DBL_MIN : FLT_MIN;
+	else if (*(LPDWORD)tmpV[2].begin() == BSWAP32('max\0'))
+		max = size == 8 ? DBL_MAX : FLT_MAX;
+#endif
+
  isBigEndian = (tmpV[4]=="big_e");
 
 
@@ -57,14 +83,25 @@
  Setting(SSGC);
 
  TSmartHandle SHandle;
+#if !LOCAL_MEMORY_SUPPORT
  if(( SHandle=SSGC.Open(this, PROCESS_VM_READ) )==NULL)
+#else
+ if ((SHandle = SSGC.Open(this, PROCESS_VM_READ, addressStr.c_str())) == NULL)
+#endif
 	return ssgCtrl::reOPEN_ERROR;	//プロセスのオープンエラー
 
+#if !SUBJECT_STATUS
  if(!SSGC.IsEnabled(this)) return ssgCtrl::reNOT_ENABLED;	//有効条件が偽
+#else
+ if(!SSGC.IsEnabled(this, TRUE)) return ssgCtrl::reNOT_ENABLED;	//有効条件が偽
+#endif
 
 
  //属性を適用
  unsigned long Address = SSGC.GetAddress(this, addressStr);
+#if SUBJECT_STATUS
+ address = (const BYTE *)Address;
+#endif
 
  double Num = 0;  //初期化
 
@@ -101,7 +138,11 @@
  Setting(SSGC);
 
  TSmartHandle SHandle;
+#if !LOCAL_MEMORY_SUPPORT
  if(( SHandle=SSGC.Open(this, PROCESS_VM_READ|PROCESS_VM_WRITE|PROCESS_VM_OPERATION) )==NULL)
+#else
+ if ((SHandle = SSGC.Open(this, PROCESS_VM_READ | PROCESS_VM_WRITE | PROCESS_VM_OPERATION, addressStr.c_str())) == NULL)
+#endif
 	return ssgCtrl::reOPEN_ERROR;	//プロセスのオープンエラー
 
  if(!SSGC.IsEnabled(this)) return ssgCtrl::reNOT_ENABLED;	//有効条件が偽
@@ -109,6 +150,9 @@
 
  //属性を適用
  unsigned long Address = SSGC.GetAddress(this, addressStr);
+#if SUBJECT_STATUS
+ address = (const BYTE *)Address;
+#endif
 
  double Num = ((TSSArgDouble*)Arg)->GetValue();
  Num = SSGC.CheckIO_FEPDouble(this, Num, ssgCtrl::ftTO_OUTPUT);
@@ -130,6 +174,9 @@
 	}
  }
 
+#if FORCE_FUNNEL
+ SSGC.CheckFunnel(this, 0);
+#endif
  return ssgCtrl::reNO_ERROR;
 }
 //---------------------------------------------------------------------
