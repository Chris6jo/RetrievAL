SSG for SpoilerAL ver 6.2

[script]
[title]*** allocateのテスト ***
[creator]変態紳士
[maker]有)洗濯機の中にはビスケットがひとつ
[process]SpoilerAL.exe
[note]wordwrap
よくわからないテスト
[/note]

[involve]ssl

[group]main

	//
	// [allocate]id, size, protect
	//
	//   id ........ メモリを確保する任意のID (0〜0xFFFFFFFF)
	//   size ...... 確保するバイト単位のサイズ
	//   protect ... RW, ReadWrite, ERW, ExcuteReadWrite, または VirtualAllocEx API の flProtect に渡す数値
	//
	//   protectのみで使える定数:
	//     RW               0x4  データ用
	//     ReadWrite        0x4
	//     ERW              0x40 プログラム用 (対象のプロセスからは書き込めません)
	//     ExecuteReadWrite 0x40
	//
	//   概要:
	//     対象のプロセスの仮想アドレス空間内にメモリを確保します。
	//     既に使用されたidを指定した場合は何も処理しません。
	//     尚、この引数では演算が出来ないので注意してください。
	//
	//   解放のタイミング:
	//     SSGを閉じた時はSpoilerALの管理により解放します。
	//     SpoilerALを強制終了した場合は対象のプロセスが終了するまで残ります。
	//     対象のプロセスが終了した場合はシステムの管理により解放されますが、
	//     その場合は対象のプロセスに確保されているか分からなくなり同期できなくなります。
	//
	//   確保と解放を管理するコードの検討:
	//     この問題を解消するには対象のプロセスにコードを注入し、
	//     ページファイルから名前でアクセスするような管理方法がありますが、
	//     ゲームという特殊な環境を無理に管理しない方が無難でしょう。
	//
	//     注意書きに「ゲームを終了した場合はSSGを読み込みなおす必要があります」などと
	//     書き足す方が現実的です。
	//

	[allocate]0, 1024, RW

	//
	// Memory::id
	//
	//   id ... [allocate]で指定した任意のID
	//
	//   戻り値:
	//     成功するとアドレスを返します。
	//     失敗するとゼロを返します。
	//
	//     失敗の原因は、無効なフラグ指定などの論理エラーと、
	//     確保できないサイズ指定やプロセスが無効な場合などの物理エラーがあります。
	//

	[subject]電卓/現在値/_:calc, _Memory::0, 0, 0xFFFFFFFF, unsigned
	[subject]文字列/現在値/_:string, _Memory::0, 1023, null

[/group]

[/involve]

[replace]_MName::SpoilerAL.exe, ssl->main

[/script]
